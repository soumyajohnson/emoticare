{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthaghosh/Downloads/emoticare_voice_upgraded/client/src/VoiceInput.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = ({\n  onResponse,\n  language\n}) => {\n  const handleClick = async () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = language;\n    recognition.start();\n    recognition.onresult = async event => {\n      const transcript = event.results[0][0].transcript;\n      console.log(\"You said:\", transcript);\n      try {\n        const res = await fetch('http://localhost:8000/analyze', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: transcript,\n            language\n          })\n        });\n        const data = await res.json();\n        onResponse(transcript, data.response);\n      } catch (error) {\n        console.error(\"Failed to fetch:\", error);\n      }\n    };\n    recognition.onerror = err => {\n      console.error(\"Speech recognition error:\", err);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    className: \"talk-button\",\n    children: \"\\uD83C\\uDFA4 Talk to EmotiCare\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["VoiceInput","onResponse","language","handleClick","recognition","window","webkitSpeechRecognition","lang","start","onresult","event","transcript","results","console","log","res","fetch","method","headers","body","JSON","stringify","text","data","json","response","error","onerror","err","_jsxDEV","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siddharthaghosh/Downloads/emoticare_voice_upgraded/client/src/VoiceInput.js"],"sourcesContent":["const VoiceInput = ({ onResponse, language }) => {\n  const handleClick = async () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = language;\n    recognition.start();\n\n    recognition.onresult = async (event) => {\n      const transcript = event.results[0][0].transcript;\n      console.log(\"You said:\", transcript);\n\n      try {\n        const res = await fetch('http://localhost:8000/analyze', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: transcript, language })\n        });\n\n        const data = await res.json();\n        onResponse(transcript, data.response);\n      } catch (error) {\n        console.error(\"Failed to fetch:\", error);\n      }\n    };\n\n    recognition.onerror = (err) => {\n      console.error(\"Speech recognition error:\", err);\n    };\n  };\n\n  return (\n    <button onClick={handleClick} className=\"talk-button\">\n      ðŸŽ¤ Talk to EmotiCare\n    </button>\n  );\n};\n\nexport default VoiceInput;\n"],"mappings":";;AAAA,MAAMA,UAAU,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAC/C,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAACC,uBAAuB,CAAC,CAAC;IACxDF,WAAW,CAACG,IAAI,GAAGL,QAAQ;IAC3BE,WAAW,CAACI,KAAK,CAAC,CAAC;IAEnBJ,WAAW,CAACK,QAAQ,GAAG,MAAOC,KAAK,IAAK;MACtC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;MACjDE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,UAAU,CAAC;MAEpC,IAAI;QACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UACvDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,IAAI,EAAEX,UAAU;YAAET;UAAS,CAAC;QACrD,CAAC,CAAC;QAEF,MAAMqB,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;QAC7BvB,UAAU,CAACU,UAAU,EAAEY,IAAI,CAACE,QAAQ,CAAC;MACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdb,OAAO,CAACa,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;IAEDtB,WAAW,CAACuB,OAAO,GAAIC,GAAG,IAAK;MAC7Bf,OAAO,CAACa,KAAK,CAAC,2BAA2B,EAAEE,GAAG,CAAC;IACjD,CAAC;EACH,CAAC;EAED,oBACEC,OAAA;IAAQC,OAAO,EAAE3B,WAAY;IAAC4B,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAC;EAEtD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GAlCIrC,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}